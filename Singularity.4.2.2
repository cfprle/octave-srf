BootStrap: docker
From: ubuntu:18.04

%labels
Maintainer richard.edmonds@plantandfood.co.nz
Version 4.2.2

%environment
    export LC_ALL=C
    export TZ=Pacific/Auckland

    #Set python3 as default as per https://github.com/cbm755/octsympy/issues/770
    export PYTHON=python3

%post
    #Set timezone for GNUTLS
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    apt-get update

    #Install TLS, SSL and curl packages for octave and its packages
    apt-get install -y gnutls-bin=3.5.18-1ubuntu1.1
    apt-get install -y libgnutls28-dev=3.5.18-1ubuntu1.1
    apt-get install -y less=487-0.1
    apt-get install -y libssl-dev=1.1.1-1ubuntu2.1~18.04.5
    apt-get install -y pkg-config=0.29.1-0ubuntu2
    apt-get install -y curl=7.58.0-2ubuntu3.8

    #Install python3 and pip for ocatave and its packages
    apt-get install -y python3=3.6.7-1~18.04
    apt-get install -y python3-pip=9.0.1-2.3~ubuntu1.18.04.1

    #Upgrade pip to newer version
    python3 -m pip install --user pip
    python3 -m pip install --upgrade pip==19.3.1

    #Listed below are the ubuntu repository versions, not used as they are too old
    #apt-get install -y python-matplotlib=2.1.1-2ubuntu3
    #apt-get install -y python-numpy=1:1.13.3-2ubuntu1       
    #apt-get install -y python-scipy=0.19.1-2ubuntu1
    #apt-get install -y python-sympy=1.1.1-5                   

    #Install python package dependancies of the octave packages
    python3 -m pip install --upgrade setuptools==39.0.1
    python3 -m pip install --upgrade matplotlib==2.2.4
    python3 -m pip install --upgrade numpy==1.16.5
    python3 -m pip install --upgrade scipy==1.2.2 
    python3 -m pip install --upgrade sympy==1.4

    #Install octave and gnuplot
    apt-get -y install octave=4.2.2-1ubuntu1
    apt-get -y install liboctave-dev=4.2.2-1ubuntu1
    apt-get -y install gnuplot=5.2.2+dfsg1-2ubuntu1

    #Install octave packages. Unfortunatley version numbering is not possible at this time
    octave-cli --eval "pkg install -forge -global symbolic"
    octave-cli --eval "pkg install -forge -global io"
    octave-cli --eval "pkg install -forge -global statistics"
    octave-cli --eval "pkg install -forge -global struct"
    octave-cli --eval "pkg install -forge -global optim"
    octave-cli --eval "pkg install -forge -global parallel"

%runscript
  #Note here that the entry point has been changed to the octave-cli rather than the octave ui binary.
  exec octave-cli "$@"
